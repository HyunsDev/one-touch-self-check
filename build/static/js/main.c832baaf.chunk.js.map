{"version":3,"sources":["Components/header.js","Components/bar.js","Screens/index.js","Screens/check.js","Components/routes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","onClick","localStorage","removeItem","window","location","replace","Bar","props","useState","status","setStatus","setText","useEffect","text","xmlns","width","height","fill","viewBox","points","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","dotenv","config","App","barStatus","setBarStatus","isAble","function","setBottom","Step1","btnStatus","setBtnStatus","bottom","getItem","inputValue","setInputValue","inputRef","React","useRef","current","focus","onInputChange","value","length","setItem","Step2","type","placeholder","onChange","e","target","onKeyPress","key","ref","test","slice","Step3","Loading","isNew","a","axios","post","process","name","birth","password","Done","console","error","response","data","code","toast","theme","clear","minutes","request","log","app","router","exact","path","component","Main","Check","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","document","getElementById"],"mappings":"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","file":"static/js/main.c832baaf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/header.scss\"\r\n\r\nfunction Header(){\r\n    return (\r\n        <div className=\"header\">\r\n            <div onClick={() => {\r\n            localStorage.removeItem('isSet')\r\n            window.location.replace(\"/\")\r\n            }}><span>원터치 자가진단</span> - 서령고등학교</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/bar.scss\"\r\n\r\nfunction Bar(props) {\r\n    const [status, setStatus] = useState(\"\")\r\n    const [text, setText] = useState(\"\")\r\n    useEffect(() => {\r\n        setText(props.text)\r\n        if (props.status === \"main\") {\r\n            setStatus(\"Bar-diagonal\")\r\n        } else if (props.status === \"setting-1\") {\r\n            setStatus(\"Bar-setting-1\")\r\n        } else if (props.status === \"setting-2\") {\r\n            setStatus(\"Bar-setting-2\")\r\n        } else if (props.status === \"setting-3\") {\r\n            setStatus(\"Bar-setting-3\")\r\n        } else if (props.status === \"loading\") {\r\n            setStatus(\"Bar-loading\")\r\n        } else if (props.status === \"success\") {\r\n            setStatus(\"Bar-success\")\r\n        } else {\r\n            setStatus(\"\")\r\n        }\r\n    }, [props.text, props.status])\r\n\r\n    return (\r\n        <div className=\"bar-divver\">\r\n            <div className={\"Bar \" + (status || \"\")}>\r\n                <div className={status !== \"Bar-success\" ? \"loader\" : \"loader loader-disappear\"} />\r\n                {status === \"Bar-success\" ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"192\" height=\"192\" fill=\"#ffffff\" viewBox=\"0 0 256 256\">\r\n                    <rect width=\"256\" height=\"256\" fill=\"none\"></rect>\r\n                    <polyline points=\"172 104 113.333 160 84 132\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"16\"></polyline>\r\n                    <circle cx=\"128\" cy=\"128\" r=\"96\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"16\"></circle>\r\n                    </svg> : <></>}\r\n            </div>\r\n            {/* <p onClick={() => { \r\n                console.log(\"유저 변경\")\r\n                localStorage.clear()\r\n                window.location.replace(\"/\")\r\n            }}>{text}</p> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bar","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\"\r\nimport Header from \"../Components/header.js\";\r\nimport Bar from \"../Components/bar\";\r\nimport \"../css/main.scss\";\r\nimport { toast } from 'react-toastify';\r\nimport dotenv from 'dotenv';\r\ndotenv.config()\r\n\r\nfunction App(props){\r\n    \r\n    // 상태 관리\r\n    const [barStatus, setBarStatus] = useState({\r\n        status: \"main\",\r\n        text: \"\"\r\n    })\r\n    const [btnStatus, setBtnStatus] = useState({\r\n        text: \"원터치 자가진단 등록\",\r\n        isAble: true,\r\n        function: () => {\r\n            setBottom(<Step1 />)\r\n        }\r\n    })\r\n    const [bottom, setBottom] = useState(<>\r\n        <p>원터치 자가진단</p>\r\n        <h1>터치 한 번으로<br />자가진단을 완료해보세요!</h1>\r\n    </>)\r\n\r\n    useEffect(() => {\r\n        console.log(localStorage.getItem(\"isSet\") === true)\r\n        if (localStorage.getItem(\"isSet\")) {\r\n            setBottom(<Loading />)\r\n        }\r\n    }, []) \r\n\r\n\r\n    // 컴포넌트\r\n    function Step1() {\r\n        const [inputValue, setInputValue] = useState(localStorage.getItem(\"name\") || \"\")\r\n        const inputRef = React.useRef(null);\r\n\r\n        useEffect(() => {\r\n            setBarStatus({\r\n                status: \"setting-1\",\r\n                text: \"\"\r\n            })\r\n            setBtnStatus({\r\n                text: \"이름을 입력하세요\",\r\n                isAble: false,\r\n                function: null\r\n            })\r\n            inputRef.current.focus();\r\n            onInputChange(inputValue)\r\n        }, [])\r\n        \r\n        const onInputChange = (value) => {\r\n            setInputValue(value)\r\n            if (value.length < 2) {\r\n                setBtnStatus({\r\n                    text: \"이름을 입력하세요\",\r\n                    isAble: false,\r\n                    function: null\r\n                })\r\n            } else if (value.length > 4) {\r\n                setBtnStatus({\r\n                    text: `올바른 이름을 입력하세요`,\r\n                    isAble: false,\r\n                    function: null\r\n                })\r\n                \r\n            } else {\r\n                setBtnStatus({\r\n                    text: `${value}님으로 계속합니다.`,\r\n                    isAble: true,\r\n                    function: () => {\r\n                        localStorage.setItem(\"name\", value)\r\n                        setBottom(<Step2 />)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        \r\n\r\n        const onEnter = (e) => {\r\n            if (e.key === \"Enter\") {\r\n                if (1 < inputValue.length && inputValue.length < 5) {\r\n                    localStorage.setItem(\"name\", inputValue)\r\n                    setBottom(<Step2 />)\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <p>원터치 자가진단 - 1/3</p>\r\n                <h1>이름을 입력하세요</h1>\r\n                <div className=\"btns\">\r\n                    <input type=\"text\" placeholder=\"박현우\" value={inputValue} onChange={e => onInputChange(e.target.value)} onKeyPress={onEnter} ref = {inputRef}/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // 생년월일\r\n    function Step2() {\r\n        const [inputValue, setInputValue] = useState(localStorage.getItem(\"birth\") || \"\")\r\n        const inputRef = React.useRef(null);\r\n\r\n        useEffect(() => {\r\n            setBarStatus({\r\n                status: \"setting-2\",\r\n                text: ``\r\n            })\r\n            setBtnStatus({\r\n                text: \"생년월일을 입력하세요\",\r\n                isAble: false,\r\n                function: null\r\n            })\r\n            inputRef.current.focus();\r\n            onInputChange(inputValue)\r\n        }, [])\r\n        \r\n        const onInputChange = (value) => {\r\n            setInputValue(value)\r\n            if (value.length < 6) {\r\n                setBtnStatus({\r\n                    text: \"생년월일을 입력하세요\",\r\n                    isAble: false,\r\n                    function: null\r\n                })\r\n            } else if (/^0\\d[01]\\d[0123]\\d$/.test(value)) {\r\n                setBtnStatus({\r\n                    text: `20${value.slice(0,2)}년 ${value.slice(2,4)}월 ${value.slice(4,6)}일`,\r\n                    isAble: true,\r\n                    function: () => {\r\n                        localStorage.setItem(\"birth\", value)\r\n                        setBottom(<Step3 />)\r\n                    }\r\n                })\r\n                \r\n            } else {\r\n                setBtnStatus({\r\n                    text: \"정확한 생년월일을 입력하세요\",\r\n                    isAble: false,\r\n                    function: null\r\n                })\r\n            }\r\n        }\r\n\r\n        const onEnter = (e) => {\r\n            if (e.key === \"Enter\") {\r\n                if (/^0\\d[01]\\d[0123]\\d$/.test(inputValue)) {\r\n                    localStorage.setItem(\"birth\", inputValue)\r\n                    setBottom(<Step3 />)\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <p>원터치 자가진단 - 2/3</p>\r\n                <h1>생년월일을 입력하세요</h1>\r\n                <div className=\"btns\">\r\n                    <input type=\"text\" placeholder=\"040708\" value={inputValue} onChange={e => onInputChange(e.target.value)} onKeyPress={onEnter} ref = {inputRef} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // 비밀번호\r\n    function Step3() {\r\n        const [inputValue, setInputValue] = useState(localStorage.getItem(\"password\") || \"\")\r\n        const inputRef = React.useRef(null);\r\n\r\n        useEffect(() => {\r\n            setBarStatus({\r\n                status: \"setting-3\",\r\n                text: \"\"\r\n            })\r\n            setBtnStatus({\r\n                text: \"자가진단 비밀번호를 입력하세요\",\r\n                isAble: false,\r\n                function: null\r\n            })\r\n            inputRef.current.focus();\r\n            onInputChange(inputValue)\r\n        }, [])\r\n        \r\n        const onInputChange = (value) => {\r\n            setInputValue(value)\r\n            if (value.length < 4) {\r\n                setBtnStatus({\r\n                    text: \"자가진단 비밀번호를 입력하세요\",\r\n                    isAble: false,\r\n                    function: null\r\n                })\r\n            } else if (/^\\d\\d\\d\\d$/.test(value)) {\r\n                setBtnStatus({\r\n                    text: `이 비밀번호로 계속합니다.`,\r\n                    isAble: true,\r\n                    function: () => {\r\n                        localStorage.setItem(\"password\", value)\r\n                        setBottom(<Loading isNew={true} />)\r\n                    }\r\n                })\r\n                \r\n            } else {\r\n                setBtnStatus({\r\n                    text: \"정확한 자가진단 비밀번호를 입력하세요\",\r\n                    isAble: false,\r\n                    function: null\r\n                })\r\n            }\r\n        }\r\n\r\n        const onEnter = (e) => {\r\n            if (e.key === \"Enter\") {\r\n                if (/^\\d\\d\\d\\d$/.test(inputValue)) {\r\n                    localStorage.setItem(\"password\", inputValue)\r\n                    setBottom(<Loading isNew={true} />)\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <p>원터치 자가진단 - 3/3</p>\r\n                <h1>자가진단 비밀번호를 입력하세요</h1>\r\n                <div className=\"btns\">\r\n                    <input type=\"text\" placeholder=\"0000\" value={inputValue} onChange={e => onInputChange(e.target.value)} onKeyPress={onEnter} ref = {inputRef} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // 로딩\r\n    function Loading(props) {\r\n        useEffect(() => {\r\n            ;(async () => {\r\n                setBarStatus({\r\n                    status: \"loading\",\r\n                    text: \"\"\r\n                })\r\n                setBtnStatus({\r\n                    text: \"잠시 기다려주세요\",\r\n                    isAble: false,\r\n                    // function: null\r\n                    function: null\r\n                })\r\n    \r\n                try {\r\n                    // console.log(process.env.REACT_APP_API_SERVER)\r\n                    await axios.post(`${process.env.REACT_APP_API_SERVER}/v1/check`, {\r\n                        name: localStorage.getItem(\"name\"),\r\n                        birth: localStorage.getItem(\"birth\"),\r\n                        password: localStorage.getItem(\"password\")\r\n                    })\r\n                    localStorage.setItem(\"isSet\", true)\r\n                    setBottom(<Done isNew={props.isNew || false} />)\r\n\r\n                } catch (err) {\r\n                    localStorage.setItem(\"isSet\", false)\r\n                    console.error(err)\r\n                    if (err.response) {\r\n                        console.error(err.response)\r\n                        switch (err.response.data.code) {\r\n                            case \"need_more_info\":\r\n                                toast.error(\"필수 정보가 누락되었어요\", { theme: \"colored\" })\r\n                                localStorage.clear()\r\n                                setBottom(<Step1 />)\r\n                                break\r\n    \r\n                            case \"first_login_failed\":\r\n                                toast.error(\"이름과 생년월일을 확인하세요\", { theme: \"colored\" })\r\n                                localStorage.clear()\r\n                                setBottom(<Step1 />)\r\n                                break\r\n    \r\n                            case \"second_login_failed\":\r\n                                toast.error(\"비밀번호를 확인하세요!\", { theme: \"colored\" })\r\n                                localStorage.setItem(\"password\", \"\")\r\n                                setBottom(<Step3 />)\r\n                                break\r\n                            \r\n                            case \"wait_please\":\r\n                                toast.error(`${err.response.data.minutes}분후에 재시도해주세요`, { theme: \"colored\" })\r\n                                setBottom(<Step3 />)\r\n                                break\r\n    \r\n                            case \"wrong_password\":\r\n                                toast.error(\"비밀번호를 확인하세요!\", { theme: \"colored\" })\r\n                                localStorage.setItem(\"password\", \"\")\r\n                                setBottom(<Step3 />)\r\n                                break\r\n\r\n                            default:\r\n                                toast.error(\"자가진단을 하지 못했어요. 다시 시도해주세요\", { theme: \"colored\" })\r\n                                setBottom(<Step3 />)\r\n                                break\r\n                        }\r\n                    } else if (err.request) {\r\n                        toast.error(\"서버 연결에 실패했어요. 다시 시도해주세요\", { theme: \"colored\" })\r\n                        setBottom(<Step3 />)\r\n                    } else {\r\n                        toast.error(\"문제가 생겼어요. \", { theme: \"colored\" })\r\n                        setBottom(<Step3 />)\r\n                    }\r\n                }\r\n            })()\r\n        }, [])\r\n        \r\n\r\n        return (\r\n            <>\r\n                <p>원터치 자가진단 - 연결중</p>\r\n                <h1>잠시 기다려주세요</h1>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // 완료\r\n    function Done(props) {\r\n        useEffect(() => {\r\n            setBarStatus({\r\n                status: \"success\",\r\n                text: `${localStorage.getItem(\"name\")}(${localStorage.getItem(\"birth\")})`\r\n            })\r\n            if (props.isNew) {\r\n                setBtnStatus({\r\n                    text: \"원터치을 위해 홈 화면에 바로가기를 추가해주세요!\",\r\n                    isAble: false,\r\n                    function: null\r\n                })\r\n            } else {\r\n                setBtnStatus({\r\n                    text: `이제 앱을 닫아주세요`,\r\n                    isAble: false,\r\n                    function: null\r\n                })\r\n                // let count = 4\r\n                // const timer = setInterval(() => {\r\n                //     count = count - 1\r\n                //     if (count < 1) {\r\n                //         clearInterval(timer)\r\n                //         window.close()\r\n                //     }\r\n                //     setBtnStatus({\r\n                //         text: `${count}초 뒤에 창을 닫을게요`,\r\n                //         isAble: false,\r\n                //         function: () => {\r\n                //             clearInterval(timer)\r\n                //             window.close()\r\n                //             setBtnStatus({\r\n                //                 text: `자동 창 닫기를 취소했어요`,\r\n                //                 isAble: false,\r\n                //                 function: null\r\n                //             })\r\n                //         }\r\n                //     })\r\n                // }, 1000)\r\n            }\r\n        }, [props.isNew])\r\n\r\n        return (\r\n            <>\r\n                <p onClick={() => {localStorage.clear(); window.location.replace(\"/\")}}>\r\n                    {localStorage.getItem(\"name\")}({localStorage.getItem(\"birth\")})\r\n                </p>\r\n                <h1>{props.isNew ? \"원터치 자가진단이 완료되었어요!\" : \"자가진단이 완료되었어요.\"}</h1>\r\n            </>\r\n        )\r\n    }\r\n    \r\n            \r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Bar status={barStatus.status} text={barStatus.text} />\r\n            <div className=\"bottoms\">\r\n                {bottom}\r\n                <div className={btnStatus.isAble ? \"main-btn\" : \"main-btn disable\"} onClick={btnStatus.function}>{btnStatus.text}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport Header from \"../Components/header.js\"\r\n\r\nfunction app(){\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default app","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Main from '../Screens/index';\r\nimport Check from '../Screens/check';\r\n\r\nfunction router() {\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/\" component={Main} />\r\n            <Route path=\"/check\" component={Check} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default router","import React from \"react\";\nimport Routes from \"./Components/routes\";\nimport \"./css/app.scss\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastContainer\n      position=\"top-center\"\n      autoClose={3000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss={false}\n      draggable\n      pauseOnHover={false}\n    />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}